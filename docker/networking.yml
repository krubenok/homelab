version: "3.8"

# Reference: http://mroach.com/2020/08/pi-hole-and-cloudflared-with-docker/#option-2-attach-cloudflared-to-the-lan

services:
  tailscale:
    container_name: tailscale
    restart: unless-stopped
    privileged: true
    image: ido1990/tailscale-docker:latest
    environment:
      - "AUTHKEY=${TAILSCALEAUTHKEY}"
      - "ROUTES=10.1.1.0/24"
    networks:
      private_lan:
        ipv4_address: 10.1.1.4

  cloudflared:
    container_name: cloudflared
    # Restart on crashes and on reboots
    restart: unless-stopped
    image: cloudflare/cloudflared:2021.12.4
    command: proxy-dns
    environment:
      - "TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query,https://9.9.9.9/dns-query,https://149.112.112.9/dns-query"

      # Listen on an unprivileged port
      - "TUNNEL_DNS_PORT=5053"

      # Listen on all interfaces
      - "TUNNEL_DNS_ADDRESS=0.0.0.0"

    # Attach cloudflared only to the private network
    networks:
      internal:
        ipv4_address: 172.30.9.2

  pihole:
    container_name: pihole
    restart: unless-stopped
    image: pihole/pihole
    environment:
      - "TZ=America/Los_Angeles"
      - "WEBPASSWORD=admin"

      # IP Address Pihole is assigned on private_lan network
      - "ServerIP=10.1.1.2"

      - "DNSSEC=true"

      # Internal IP of the cloudflared container
      - "DNS1=172.30.9.2#5053"

      # Explicitly disable a second DNS server, otherwise Pi-hole uses Google
      - "DNS2=no"

      # Listen on all interfaces and permit all origins
      # This allows Pihole to work in this setup and when answering across VLANS,
      # but do not expose pi-hole to the internet!
      - "DNSMASQ_LISTENING=all"

    # Persist data and custom configuration to the host's storage
    volumes:
      - "/mnt/appdata/pihole/config:/etc/pihole/"
      - "/mnt/appdata/pihole/dnsmasq:/etc/dnsmasq.d/"

    # 1. Join the internal network so Pi-hole can talk to cloudflared
    # 2. Join the public network so it's reachable by systems on our LAN
    networks:
      internal:
        ipv4_address: 172.30.9.3
      private_lan:
        ipv4_address: 10.1.1.2

    # Starts cloudflard before Pi-hole
    depends_on:
      - cloudflared

networks:
  # Create the internal network
  internal:
    ipam:
      config:
        - subnet: 172.30.9.0/29

  # The priv_lan network is already setup, so it is an 'external' network
  private_lan:
    external:
      name: private_lan
